package shunfeng;

/**
 * 小红有一棵圣诞树，圣诞树由n个节点组成，每个节点上都有一些愿望（整数，可能为负数，即圣诞树回馈小红一个愿望）。
 * 小红想要实现树上的所有愿望。她可以做一些操作，每次操作可以选择一个包含节点1的子图，
 * 并将子图的所有节点的愿望数量+1或-1（实现或回馈）。请问小红至少要操作多少次，才能让所有节点的愿望为0。
 *
 * 子图是指有一个图，它的节点和边都是原树的子集。
 *
 *
 * 对于每一组数据，包含三行数据，第一行是树的节点个数n。
 *
 * 第二行有n-1个数据pi(i=2,3,...,n)表示节点i的父亲节点。
 *
 * 第三行有n个数据ai(i=1,2,3,...,n)表示最初的愿望数。
 *
 * 数字间两两有空格隔开。
 *
 * 1≤n≤50000, 1≤pi≤ i-1, -10^9≤ai≤10^9
 *
 * 输出一个整数，表示最少做多少次操作。
 *
 *
 * 3
 * 1 1
 * 1 -1 1
 *
 * 3
 *
 */
public class Main2 {
    public static void main(String[] args) {


    }
}

